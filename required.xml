<?xml version="1.0" encoding="utf-8"?>
<ArrayOfItem xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <Item>
    <key>Sashimi</key>
    <value>
Ingredients (5)

    1 pound fresh, sashimi-quality fish, such as yellowfin tuna or salmon
    2 teaspoons extra-virgin olive oil
    4 teaspoons shiro dashi or regular Japanese soy sauce
    2 teaspoons white sesame seeds
    1/2 teaspoon thinly sliced chives

Summary

Chef Wayne Nish celebrates high-quality, fresh fish with this sashimi preparation.

What to buy: Sashimi is all about the fish; with so few ingredients it’s imperative to buy the best you can find. We made this with yellowfin tuna, though it would be equally good with salmon or hamachi. Buy your fish from a reputable source, and let your fishmonger know that you will be serving it raw so he or she gives you a top-quality piece.

Regular soy sauce is fermented from 80 percent soybeans and 20 percent wheat. White soy sauce, or shiro-shoyu, is made from the opposite: 80 percent wheat and 20 percent soybeans. Then niboshi (tiny dried sardines), kombu (dried giant seaweed), and dried shiitake mushrooms are added to produce a more flavorful brew called shiro dashi, which can be found in Japanese and Asian markets or online. If shiro dashi is not readily available, just use a regular high-quality Japanese soy sauce.

Game plan: To maintain the quality of the fish, serve it on chilled plates and keep the sashimi in the refrigerator until you are ready to slice it.

This recipe was featured as part of our no-cook story.
Adapted from Wayne Nish
Instructions

    1Remove fish from the refrigerator and, using a sharp knife with a thin blade, slice very thinly. Divide slices of fish evenly among 8 plates.
    2Drizzle each serving with about 1/4 teaspoon olive oil and 1/2 teaspoon soy sauce, adding more as desired. Sprinkle sesame seeds and chives over fish and serve immediately.

Beverage pairing: Tozai Junmai Living Jewel Sake, Japan. Of course it’s natural to think of sake when eating sashimi. But sake does indeed have an ethereal delicateness that perfectly embellishes the creamy texture and pillowy softness of good fish.
    </value>
  </Item>
  <Item>
    <key>source</key>
    <value>using System;
using System.Windows.Forms;
using System.Drawing;
using System.Collections.Generic;
using System.Xml;
using System.Xml.Serialization;
using System.IO;

public class RecipeBook
{
    private int selectedIndex = -1;

    private Form mainForm = new Form();
    
    private Panel leftPanel = new Panel();
    
    private Panel rightPanel = new Panel();
    
    private ListBox recipeList = new ListBox();
    
    private TextBox tb1 = new TextBox();
    
    private TextBox tb = new TextBox();
    
    private LList recipes = new LList();
    
    private Label theContent = new Label();
    
    private ComboBox printList = new ComboBox();
    
    private Serializer serializer = new Serializer();

    private Button upButton = new Button();

    private Button downButton = new Button();

    private RadioButton deleteButton = new RadioButton();

    private RadioButton printButton = new RadioButton();
    
    private Form splashForm = new Form();
    
    private PrintManager printManager = null;
    
    private Label selectRecipe = new Label();

    public RecipeBook()
    {
        printManager = new PrintManager(printButton, printList, theContent.Text);

        splashForm.SetBounds(0, 0, 400, 400);

        splashForm.ControlBox = false;
        splashForm.MaximizeBox = false;
        splashForm.MinimizeBox = false;
        splashForm.ShowIcon = false;

        splashForm.StartPosition = FormStartPosition.CenterScreen;
        splashForm.FormBorderStyle = FormBorderStyle.None;
        
        splashForm.MinimumSize = new Size(400, 400);
        splashForm.MaximumSize = new Size(400, 400);
        
        Panel splashPanel = new Panel();
        splashPanel.SetBounds(0, 0, 400, 400);
        splashPanel.BackColor = Color.Transparent;

        Size size = new Size(400, 400);
        splashPanel.BackgroundImage = Image.FromFile("splash.jpg");

        Bitmap bmp = new Bitmap(splashPanel.BackgroundImage, size);
        splashPanel.BackgroundImage = bmp;

        splashForm.Controls.Add(splashPanel);
    }

    public void ShowBook()
    {
        mainForm.SetBounds(0, 0, 1000, 600);

        mainForm.Controls.Add(leftPanel);
        mainForm.Controls.Add(rightPanel);

        mainForm.Text = "RecipeBook";

        mainForm.FormBorderStyle = FormBorderStyle.FixedSingle;
        mainForm.MaximizeBox = false;

        leftPanel.SetBounds(0, 0, 250, 600);
        rightPanel.SetBounds(250, 0, 750, 600);

        mainForm.Icon = new Icon("block.ico");

        AddList();

        rightPanel.Controls.Clear();
        rightPanel.Controls.Add(DisplaySelectedText());

        AddContentViewBg();
        
        AddButtons();
    }

    private void AddContentViewBg()
    {
        Size size = new Size(600, 600);
        rightPanel.BackgroundImage = Image.FromFile(@"bg.png");
        Bitmap bmp = new Bitmap(rightPanel.BackgroundImage, size);
        rightPanel.BackgroundImage = bmp;
    }

    private void AddButtons()
    {
        upButton.Text = "Up";
        upButton.SetBounds(604, 70, 44, 24);
        upButton.Click += new EventHandler(MoveTextDown);

        rightPanel.Controls.Add(upButton);

        downButton.Text = "Down";
        downButton.SetBounds(650, 70, 44, 24);
        downButton.Click += new EventHandler(MoveTextUp);

        rightPanel.Controls.Add(downButton);
        
        deleteButton.SetBounds(664, 0, 80, 40);
        deleteButton.Text = "Erase?";
        deleteButton.ForeColor = Color.Black;
        deleteButton.BackColor = Color.Transparent;
        deleteButton.Click += new EventHandler(DeleteCurrentRecipe);

        rightPanel.Controls.Add(deleteButton);
        
        printButton.SetBounds(600, 0, 80, 40);
        printButton.Text = "Print? or ";
        printButton.ForeColor = Color.Black;
        printButton.BackColor = Color.Transparent;
        
        rightPanel.Controls.Add(printButton);

        Button editButton = new Button();
        editButton.SetBounds(600, 300, 80, 40);
        editButton.Text = "Edit";
        editButton.Click += new EventHandler(EditCurrentRecipe);

        rightPanel.Controls.Add(editButton);


        
        rightPanel.Controls.Add(printList);
        

        
        mainForm.Hide();
        
        mainForm.Show();
    }

    private void EditCurrentRecipe(object sender, EventArgs e)
    {

        NewRecipe(sender, null);

        tb1.Text = recipes[selectedIndex].key;

        tb.Text = recipes[selectedIndex].value;

    }
    int ad = 1;
    private void DeleteCurrentRecipe(object sender, EventArgs e)
    {
        Console.WriteLine(selectedIndex);
        try
        {
            if (ad &lt;= 2)
            {
                ad++;
                if (ad == 2)
                {
                    recipes.RemoveAt(selectedIndex);
                    recipeList.Items.Remove(recipeList.Items[selectedIndex]);

                    UpdateDatabase(null, null);

                    NewRecipe(null, null);

                    deleteButton.Checked = false;

                    ad = 1;
                }
            }
        }
        catch (Exception ex)
        {
            ad = 1;
        }
        mainForm.Hide();
        mainForm.Show();
    }

    private void MoveTextUp(object sender, EventArgs e)
    {
        theContent.SetBounds(0, theContent.Top- 70, 600, 6000);

        rightPanel.Hide();
        
        rightPanel.Show();
    }

    private void MoveTextDown(object sender, EventArgs e)
    {
        theContent.SetBounds(0, theContent.Top+ 70, 600, 6000);
        
        rightPanel.Hide();
        
        rightPanel.Show();
    }

    private void AddList()
    {
        OpenRecipesFile(null, null);

        Button neew = new Button();
        neew.Text = "Make Recipe";
        neew.SetBounds(0, 0, 86, 20);
        neew.Click += new EventHandler(NewRecipe);

        leftPanel.Controls.Add(neew);

        selectRecipe.SetBounds(0, 70, 80, 20);
        selectRecipe.Text = "Select Recipe";
        selectRecipe.Click += new EventHandler(DisplayRecipe);
        
        leftPanel.Controls.Add(selectRecipe);

        recipeList.SetBounds(0, 100, 250, 500);

        for (int i = 0; i &lt; recipes.Count; i++)
        {
            recipeList.Items.Add(recipes[i].key);
        }

        leftPanel.Controls.Add(recipeList);
        
        recipeList.Click += new EventHandler(DisplayRecipe);
        recipeList.ScrollAlwaysVisible = true;

        recipeList.SetBounds(0, 100, 200, 500);
        leftPanel.AutoScroll = true;
    }

    private void OpenRecipesFile(object sender, EventArgs e)
    {
        recipes = serializer.Deserialize();
    }

    private void NewRecipe(object sender, EventArgs e)
    {
        rightPanel.Controls.Clear();

        Label title = new Label();
        title.Text = "Title of recipe";
        title.BackColor = Color.Transparent;
        title.SetBounds(0, 0, 180, 25);

        rightPanel.Controls.Add(title);

        tb1.SetBounds(0, 25, 600, 40);

        Label cont = new Label();
        cont.Text = "Recipe";
        cont.BackColor = Color.Transparent;
        cont.SetBounds(0, 65, 80, 25);
        
        rightPanel.Controls.Add(cont);

        tb.Multiline = true;
        tb.SetBounds(0, 90, 600, 300);
        tb.Text = "";
        tb1.Text = "";

        tb1.ForeColor = Color.White;
        tb.ForeColor = Color.White;
        tb1.BackColor = Color.Black;
        tb.BackColor = Color.Black;

        Button saveOrUpdate = new Button();
        saveOrUpdate.SetBounds(300, 420, 50, 20);
        saveOrUpdate.Text = "SAVE";
        if (sender != null)
        {
            if (((Button)sender).Text.Equals("Edit"))
            {
                saveOrUpdate.Text = "EDIT";
                saveOrUpdate.Click += new EventHandler(EditDatabase);
            }
            else
            {
                saveOrUpdate.Click += new EventHandler(UpdateDatabase);
            }
        }
        
        rightPanel.Controls.Add(saveOrUpdate);
        
        rightPanel.Controls.Add(tb1);
        
        rightPanel.Controls.Add(tb);
    }

    private void EditDatabase(object sender, EventArgs e)
    {
        recipeList.Items.Clear();

        if (sender != null)
        {
            recipes[selectedIndex].key = tb1.Text;
            recipes[selectedIndex].value = tb.Text;
        }

        for (int i = 0; i &lt; recipes.Count; i++)
        {
            recipeList.Items.Add(recipes[i].key);
        }

        serializer.Serialize(recipes);

        mainForm.Hide();

        mainForm.Show();
    }

    private void UpdateDatabase(object sender, EventArgs e)
    {
        recipeList.Items.Clear();
        
        if (sender != null)
        {
            recipes.Add(new Item(tb1.Text, tb.Text));
        }

        for (int i = 0; i &lt; recipes.Count; i++)
        {
            recipeList.Items.Add(recipes[i].key);
        }

        serializer.Serialize(recipes);
        
        mainForm.Hide();
        
        mainForm.Show();
    }

    private void DisplayRecipe(object sender, EventArgs e)
    {

        selectedIndex = recipeList.SelectedIndex;


        if (sender == selectRecipe)
        {
            selectedIndex = -1;
            recipeList.SelectedIndex = -1;
        }


        rightPanel.Controls.Clear();

        AddButtons();
        
        rightPanel.Controls.Add(DisplaySelectedText());
    }

    private Label DisplaySelectedText()
    {
        if (selectedIndex != -1)
        {
            
            Label dynamicTextBox = new Label();

            dynamicTextBox.BackColor = Color.Transparent;
            
            dynamicTextBox.ForeColor = Color.Black;
            
            dynamicTextBox.Font = new Font("Georgia", 16);
            
            dynamicTextBox.SetBounds(0, 0, 600, 6000);

            
            if (selectedIndex &gt; -1 &amp;&amp; selectedIndex &lt; recipeList.Items.Count)
            {
                dynamicTextBox.Text = recipeList.Items[selectedIndex] + "\n\n" + recipes[selectedIndex].value;
            }

            
            theContent = dynamicTextBox;

            return dynamicTextBox;

        }
        else
        {
            Label dynamicTextBox = new Label();

            dynamicTextBox.BackColor = Color.Transparent;

            dynamicTextBox.ForeColor = Color.Black;

            dynamicTextBox.Font = new Font("Georgia", 36);

            dynamicTextBox.SetBounds(0, 0, 600, 6000);

            dynamicTextBox.Text = "Select Recipe From Left Side";
            
            theContent = dynamicTextBox;

            Panel selectRecipePanel = new Panel();

            selectRecipePanel.SetBounds(100, 100, 400, 400);

            Size size = new Size(400, 400);

            selectRecipePanel.BackgroundImage = Image.FromFile(@"splash.jpg");
            
            Bitmap bmp = new Bitmap(selectRecipePanel.BackgroundImage, size);
            
            selectRecipePanel.BackgroundImage = bmp;

            rightPanel.Controls.Add(selectRecipePanel);
            
            return theContent;
        }
    }

    public static void Main()
    {
        RecipeBook recipeBook = new RecipeBook();
        
        recipeBook.splashForm.Show();
        
        new System.Threading.ManualResetEvent(false).WaitOne(1250);
        
        recipeBook.splashForm.Close();

        recipeBook.ShowBook();
        
        recipeBook.mainForm.Show();
        
        Application.Run(recipeBook.mainForm);
    }
}</value>
  </Item>
</ArrayOfItem>